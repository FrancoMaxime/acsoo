stages:
  - build
  - test
  - deploy

before_script:
  - |
    function install_acsoo {
        virtualenv --python=$PYTHON venv-acsoo
        venv-acsoo/bin/pip install acsoo
        ln -s venv-acsoo/bin/acsoo
    }
    function start_ssh_agent {
        eval $(ssh-agent -s)
        ssh-add <(echo "$SSH_DEPLOY_KEY")
        echo "${SSH_AGENT_PID}" > ssh-agent.pid
    }
    function makepot {
        # if you use weblate, remove --msgmerge here and install the msgmerge addon on weblate
        venv/bin/click-odoo-makepot -c odoo-ci.cfg -d ${DB_NAME} --commit --msgmerge --addons-dir=$(pwd)/odoo/addons
        git push --push-option ci.skip "git@gitlab.acsone.eu:${CI_PROJECT_PATH}" "HEAD:${CI_COMMIT_REF_NAME}"
    }

after_script:
  # important to cleanup after ourselves to avoid
  # leaving ssh agents running on the shell executor
  - if [ -f ssh-agent.pid ] ; then kill $(cat ssh-agent.pid) ; fi
  - dropdb --if-exists ${DB_NAME}
  - rm -fr ${HOME}/.local/share/Odoo/filestore/${DB_NAME}

variables:
  PYTHON: {{{ python_version }}}
  DB_NAME: "${CI_PROJECT_NAME}-${CI_JOB_ID}"

pre-commit:
  stage: test
  image: {{{ python_version }}}
  cache:
    key: pre-commit
    paths:
    - .pre-commit
  script:
    - pip install pre-commit
    - PRE_COMMIT_HOME=$PWD/.pre-commit pre-commit run --all-files
  needs: []

build:
  stage: build
  # use odoo-{{{ odoo.series }}} runner so we have the pre-cloned odoo
  # except for that optimization, we don't need odoo dependencies for this job
  tags:
    - odoo-{{{ odoo.series }}}
  script:
    - start_ssh_agent
    - virtualenv --python=$PYTHON venv
    - venv/bin/pip wheel --no-deps -r requirements.txt -e . --wheel-dir=./release
  artifacts:
    expire_in: 1 week
    paths:
      - release/
    name: "${CI_PROJECT_NAME}-${CI_JOB_ID}-build"

{{% if odoo.series in ['8.0', '9.0'] %}}
{{% set odoocmd = 'openerp-server' %}}
{{% else %}}
{{% set odoocmd = 'odoo' %}}
{{% endif %}}
test:
  stage: test
  tags:
    - odoo-{{{ odoo.series }}}
  script:
    - install_acsoo
    - start_ssh_agent  # for pushing translations
    - virtualenv --python=$PYTHON venv
    - venv/bin/pip install coverage
    # use --no-index so missing dependencies that would not be in *.whl are detected
    # install the project in editable mode (-e) so coverage sees it
    - venv/bin/pip install --no-index --find-links release -e .
    - ADDONS_INIT=$(./acsoo addons list-depends)
    - echo Installing ${ADDONS_INIT}
    - unbuffer venv/bin/click-odoo-initdb -c odoo-ci.cfg --new-database ${DB_NAME} --cache-prefix {{{ project.trigram }}} -m ${ADDONS_INIT} | ./acsoo checklog
    - ADDONS_TEST=$(./acsoo addons list)
    - echo Testing ${ADDONS_TEST}
    - unbuffer venv/bin/coverage run --branch venv/bin/{{{ odoocmd }}} -c odoo-ci.cfg -d ${DB_NAME} --stop-after-init --no-xmlrpc -i ${ADDONS_TEST} --test-enable | ./acsoo checklog
    - venv/bin/coverage html
    - venv/bin/coverage report
    - if [ "${CI_COMMIT_REF_NAME}" = "master" ] ; then makepot ; fi
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    expire_in: 1 week
    paths:
      - htmlcov/
    name: "${CI_PROJECT_NAME}-${CI_JOB_ID}-coverage-html"
  dependencies:
    - build

deploy-test:
  stage: deploy
  script:
    - start_ssh_agent
    - ./deploy-test
  environment:
    name: {{{ project.name }}}-test
    url: https://odoo-{{{ project.name }}}-test.acsone.eu
  only:
    - /^\d+\.\d+\.\d+$/
  dependencies:
    - build
